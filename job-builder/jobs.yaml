- defaults:
    name: global
    block-upstream: true
    logrotate:
      daysToKeep: 70
      numToKeep: 50
    wrappers:
      - ansicolor
      - timestamps

- job-template:
    name: postgresql_{label}_world
    description: 'Runs <code>make world</code> and <code>make check-world</code> with most build options enabled.'
    logrotate:
      daysToKeep: 200
      numToKeep: 100
    scm:
      - git:
          url: git://git.postgresql.org/git/postgresql.git
          branches:
            - origin/{branch_name}
          shallow-clone: true
          clean:
            after: true
          fastpoll: true
          wipe-workspace: false
          browser: gitweb
          browser-url: http://git.postgresql.org/gitweb/?p=postgresql.git
    triggers:
      - pollscm:
          cron: 'H/10 * * * *'
      - timed: '@daily'
    builders:
      - shell: '. /srv/pgci/jobhelpers/postgresql-build.sh'
    publishers:
      - archive:
          artifacts: '**/regression.diffs,**/regression.out,postgresql-*.tar.*,doc/src/sgml/postgres.xml,cpluspluscheck.out,git-log-since-last-tag.txt'
          allow-empty: true
      - fingerprint:
          files: postgresql-*.tar.*
      - html-publisher:
          name: Documentation
          dir: doc/src/sgml/html/
          files: index.html
          keep-all: false
      - text-finder:
          regexp: 5644dbce38ce0f5f16155eba9988fee1
          also-check-console-output: true
          unstable-if-found: true
      - trigger:
          project: postgresql_{label}_dist, postgresql_{label}_extradoc, _extensions_trigger
          threshold: UNSTABLE
      - warnings:
          console-log-parsers:
            - 'GNU Make + GNU Compiler (gcc)'
          total-thresholds:
            unstable:
              total-all: '{num-warnings}'

- job-template:
    name: postgresql_{label}_coverage
    description: Runs the main regression tests (<code>make check</code>) and collects code coverage information.
    logrotate:
      daysToKeep: 70
      numToKeep: 30
    quiet-period: 120
    scm:
      - git:
          url: git://git.postgresql.org/git/postgresql.git
          branches:
            - origin/{branch_name}
          shallow-clone: true
          clean:
            after: true
          fastpoll: true
          wipe-workspace: false
          browser: gitweb
          browser-url: http://git.postgresql.org/gitweb/?p=postgresql.git
    triggers:
      - reverse:
          jobs: 'postgresql_{label}_world'
          result: 'success'
    builders:
      - shell: |
          ./configure --enable-coverage --enable-depend
          make all coverage-clean
          make check MAX_CONNECTIONS=1
          make coverage-html
    publishers:
      - html-publisher:
          name: Coverage
          dir: coverage
          files: index.html
          keep-all: true

- job-template:
    name: postgresql_{label}_dist
    description: Runs <code>make distcheck</code>.  This is separate from the "world" job because it needs to be run in a clean tree.
    scm:
      - git:
          url: git://git.postgresql.org/git/postgresql.git
          branches:
            - origin/{branch_name}
          shallow-clone: true
          clean:
            after: true
          fastpoll: true
          wipe-workspace: false
          browser: gitweb
          browser-url: http://git.postgresql.org/gitweb/?p=postgresql.git
    builders:
      - shell: '. /srv/pgci/jobhelpers/postgresql-dist.sh'
    publishers:
      - archive:
          artifacts: 'postgresql-*.tar.*'
          allow-empty: false
          latest-only: true

- job-template:
    name: postgresql_{label}_extradoc
    description: "Builds additional nonstandard documentation formats: HTML via XSLT, PDF, Info, EPUB"
    logrotate:
      daysToKeep: 40
      numToKeep: 20
    properties:
      - build-blocker:
          use-build-blocker: true
          blocking-jobs:
            - ".*"
    scm:
      - git:
          url: git://git.postgresql.org/git/postgresql.git
          branches:
            - origin/{branch_name}
          shallow-clone: true
          clean:
            after: false
          fastpoll: true
          wipe-workspace: false
          browser: gitweb
          browser-url: http://git.postgresql.org/gitweb/?p=postgresql.git
    builders:
      - shell: '. /srv/pgci/jobhelpers/postgresql-extradoc.sh'
    publishers:
      - archive:
          artifacts: 'doc/src/sgml/*.pdf,doc/src/sgml/*.info,doc/src/sgml/*.epub'
          allow-empty: false
          latest-only: true
      - html-publisher:
          name: Documentation (XSLT)
          dir: doc/src/sgml/html/
          files: index.html
          keep-all: false

- job-template:
    name: postgresql_{label}_linkcheck
    description: Checks all the external links in the documentation.
    block-upstream: false
    quiet-period: 300
    triggers:
      - timed: '@daily'
    triggers:
      - reverse:
          jobs: 'postgresql_{label}_world'
          result: 'success'
    builders:
      - copyartifact:
          project: postgresql_{label}_world
          filter: doc/src/sgml/postgres.xml
          flatten: true
      - shell: 'bash /srv/pgci/jobhelpers/checklinks.sh postgres.xml'
    publishers:
      - tap:
          results: checklinks.tap
          fail-if-no-results: true
          todo-if-failure: false
    wrappers:
      - ansicolor
      - timestamps
      - workspace-cleanup

- job-template:
    name: postgresql_{label}_pgindent
    description: Runs pgindent to re-indent the source code to standard style, and collects a diff of what it did.
    scm:
      - git:
          url: git://git.postgresql.org/git/postgresql.git
          branches:
            - origin/{branch_name}
          shallow-clone: true
          clean:
            after: true
          fastpoll: true
          wipe-workspace: true
          browser: gitweb
          browser-url: http://git.postgresql.org/gitweb/?p=postgresql.git
    triggers:
      - reverse:
          jobs: 'postgresql_{label}_world'
          result: 'success'
    builders:
      - shell: '. /srv/pgci/jobhelpers/postgresql-pgindent.sh'
    publishers:
      - archive:
          artifacts: 'pgindent.diff'
          allow-empty: false
          latest-only: true

- job-template:
    name: postgresql_{label}_sanitize_address
    description: Builds and tests PostgreSQL with <a href="http://clang.llvm.org/docs/AddressSanitizer.html">AddressSanitizer</a>.
    scm:
      - git:
          url: git://git.postgresql.org/git/postgresql.git
          branches:
            - origin/{branch_name}
          shallow-clone: true
          clean:
            after: true
          fastpoll: true
          wipe-workspace: false
          browser: gitweb
          browser-url: http://git.postgresql.org/gitweb/?p=postgresql.git
    triggers:
      - reverse:
          jobs: 'postgresql_{label}_world'
          result: 'success'
    builders:
      - shell: 'schroot -c pgci-jessie -- sh -ex /srv/pgci/jobhelpers/postgresql-sanitize-address.sh'
    publishers:
      - archive:
          artifacts: '**/*.log.asan'
          allow-empty: true

- job-template:
    name: postgresql_{label}_scan-build
    description: Runs <a href="http://clang-analyzer.llvm.org/scan-build.html">clang scan-build</a> over the PostgreSQL sources.
    logrotate:
      daysToKeep: 70
      numToKeep: 30
    scm:
      - git:
          url: git://git.postgresql.org/git/postgresql.git
          branches:
            - origin/{branch_name}
          shallow-clone: true
          clean:
            after: true
          fastpoll: true
          wipe-workspace: false
          browser: gitweb
          browser-url: http://git.postgresql.org/gitweb/?p=postgresql.git
    triggers:
      - reverse:
          jobs: 'postgresql_{label}_world'
          result: 'success'
    builders:
      - shell: 'schroot -c pgci-jessie -- sh -ex /srv/pgci/jobhelpers/postgresql-scan-build.sh'
    publishers:
      - scan-build

- project:
    name: postgresql
    label:
      - master:
          branch_name: master
          num-warnings: 1
      - 9.5:
          branch_name: REL9_5_STABLE
          num-warnings: 1
      - 9.4:
          branch_name: REL9_4_STABLE
          num-warnings: 1
      - 9.3:
          branch_name: REL9_3_STABLE
          num-warnings: 1
      - 9.2:
          branch_name: REL9_2_STABLE
          num-warnings: 1
      - 9.1:
          branch_name: REL9_1_STABLE
          num-warnings: 40
    jobs:
      - 'postgresql_{label}_dist'
      - 'postgresql_{label}_extradoc'
      - 'postgresql_{label}_world'

- project:
    name: postgresql-extra
    label:
      - master:
          branch_name: master
    jobs:
      - 'postgresql_{label}_coverage'
      - 'postgresql_{label}_linkcheck'
      - 'postgresql_{label}_pgindent'
      - 'postgresql_{label}_sanitize_address'
      - 'postgresql_{label}_scan-build'

- job:
    name: _extensions_trigger
    description: Triggers the build of all extensions whenever a PostgreSQL build has finished.
    logrotate:
      daysToKeep: 10
      numToKeep: 1
    builders:
      - copyartifact:
          project: postgresql_master_world
          filter: postgresql-*.bin.tar.xz
      - copyartifact:
          project: postgresql_9.5_world
          filter: postgresql-*.bin.tar.xz
      - copyartifact:
          project: postgresql_9.4_world
          filter: postgresql-*.bin.tar.xz
      - copyartifact:
          project: postgresql_9.3_world
          filter: postgresql-*.bin.tar.xz
      - copyartifact:
          project: postgresql_9.2_world
          filter: postgresql-*.bin.tar.xz
      - copyartifact:
          project: postgresql_9.1_world
          filter: postgresql-*.bin.tar.xz
    publishers:
      - archive:
          artifacts: postgresql-*.bin.tar.xz
          latest-only: true
      - trigger:
          project: ext_orafce, ext_pg_logforward, ext_pghashlib, ext_pglibuuid, ext_pgmemcache, ext_pgvihash, ext_plproxy, ext_plr, ext_plsh, ext_plv8
          threshold: SUCCESS

- job-template:
    name: ext_{ext}
    project-type: matrix
    description: Builds and tests extension {ext}
    execution-strategy:
      sequential: '{matrix_sequential}'
    axes:
      - axis:
          type: user-defined
          name: pgversion
          values:
            - 9.1
            - 9.2
            - 9.3
            - 9.4
            - 9.5
            - 9.6
    scm:
      - git:
          url: '{git_url}'
          branches:
            - origin/master
          shallow-clone: true
          clean:
            after: true
          fastpoll: true
          wipe-workspace: false
          browser: gitweb
          browser-url: '{git_browser_url}'
    triggers:
      - pollscm:
          cron: 'H/10 * * * *'
    wrappers:
      - ansicolor
      - timestamps
      - port-allocator:
          names:
            - WPTI_PGPORT
    builders:
      - copyartifact:
          project: _extensions_trigger
          filter: postgresql-$pgversion.bin.tar.xz
      - shell: |
          {shell_extra}
          . /srv/pgci/jobhelpers/pgxs-build.sh
    publishers:
      - archive:
          artifacts: '**/regression.diffs,**/regression.out'
          allow-empty: true
      - text-finder:
          regexp: 5644dbce38ce0f5f16155eba9988fee1
          also-check-console-output: true
          unstable-if-found: true

- project:
    name: extensions
    ext:
      - orafce:
          git_url: 'https://github.com/orafce/orafce.git'
          git_browser_url: 'https://github.com/orafce/orafce/'
          matrix_sequential: false
          shell_extra: 'PGCI_SKIP_CHECK=yes'
      - pg_logforward:
          git_url: 'https://github.com/mpihlak/pg_logforward.git'
          git_browser_url: 'https://github.com/mpihlak/pg_logforward'
          matrix_sequential: false
          shell_extra: |
            case $pgversion in
                9.1) exit 0;;
            esac
      - pghashlib:
          git_url: 'https://github.com/markokr/pghashlib.git'
          git_browser_url: 'https://github.com/markokr/pghashlib'
          matrix_sequential: false
          shell_extra: ''
      - pglibuuid:
          git_url: 'https://github.com/petere/pglibuuid.git'
          git_browser_url: 'https://github.com/petere/pglibuuid'
          matrix_sequential: false
          shell_extra: ''
      - pgmemcache:
          git_url: 'https://github.com/ohmu/pgmemcache.git'
          git_browser_url: 'https://github.com/ohmu/pgmemcache'
          matrix_sequential: false
          shell_extra: ''
      - pgvihash:
          git_url: 'https://github.com/petere/pgvihash.git'
          git_browser_url: 'https://github.com/petere/pgvihash'
          matrix_sequential: false
          shell_extra: ''
      - plproxy:
          git_url: 'https://github.com/markokr/plproxy-dev.git'
          git_browser_url: 'https://github.com/markokr/plproxy-dev'
          matrix_sequential: false
          shell_extra: 'WPTI_FLAGS=-CL'
      - plr:
          git_url: 'https://github.com/jconway/plr.git'
          git_browser_url: 'https://github.com/jconway/plr'
          matrix_sequential: false
          shell_extra: ''
      - plsh:
          git_url: 'https://github.com/petere/plsh.git'
          git_browser_url: 'https://github.com/petere/plsh'
          matrix_sequential: true
          shell_extra: ''
      - plv8:
          git_url: 'https://github.com/plv8/plv8.git'
          git_browser_url: 'https://github.com/plv8/plv8'
          matrix_sequential: false
          shell_extra: |
            case $pgversion in
                9.1) WPTI_FLAGS="-ccustom_variable_classes='plv8'";;
            esac
    jobs:
      - 'ext_{ext}'

- job:
    name: pex_repotest
    description: Runs <code><a href="https://github.com/petere/pex">pex</a> repotest</code>.
    scm:
      - git:
          url: https://github.com/petere/pex.git
          branches:
            - remotes/origin/master
          shallow-clone: true
          clean:
            after: true
          fastpoll: true
          wipe-workspace: false
          browser: githubweb
          browser-url: https://github.com/petere/pex
          basedir: pex
      - git:
          url: https://github.com/petere/pex-packages.git
          branches:
            - remotes/origin/master
          shallow-clone: true
          clean:
            after: true
          fastpoll: true
          wipe-workspace: false
          browser: githubweb
          browser-url: https://github.com/petere/pex-packages
          basedir: pex-packages
    triggers:
      - pollscm:
          cron: '@hourly'
      - timed: '@daily'
    builders:
      - shell: |
          rm -rf home
          mkdir home
          HOME=$PWD/home
          export HOME

          rm -f *.tap

          ./pex/pex init file://$PWD/pex-packages
          ./pex/pex repotest | tee repotest.tap || :
    publishers:
      - tap:
          results: repotest.tap
          fail-if-no-results: true
          output-tap-to-console: false
